<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java方法-提取字符串指定索引范围的字符</title>
      <link href="/posts/23450/"/>
      <url>/posts/23450/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public static int substringToInt(String str, int startIndex, int endIndex) &#123;</span><br><span class="line">    if (startIndex &gt;= 0 &amp;&amp; endIndex &lt; str.length() &amp;&amp; startIndex &lt;= endIndex) &#123;</span><br><span class="line">        String subStr = str.substring(startIndex, endIndex + 1);</span><br><span class="line">        return Integer.parseInt(subStr);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        throw new IndexOutOfBoundsException(&quot;Invalid index range&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客中在页面中引入自定义html页面</title>
      <link href="/posts/1107/"/>
      <url>/posts/1107/</url>
      
        <content type="html"><![CDATA[<p>如果需要在 ‘page’ 中添加自定义html代码（包括css、js），并且在不修改主题源代码的情况下实现，这篇文章会对你有所帮助。</p><p>话不多说，直接开整。</p><p>这里我以<a class="btn-beautify " href="https://buxiantang.top/about/"   title="关于我"><i class="far fa-hand-point-right"></i><span>关于我</span></a>页面进行实操演示。</p><p>实现这个功能，涉及下面的文件：</p><ul><li>_config.yml（站点文件，主题文件配置均有修改）</li><li>about.md</li><li>自定义html、对应的css、js文件（如有）</li></ul><div class="tabs" id="edit"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#edit-1">修改一-站点配置文件</button></li><li class="tab"><button type="button" data-href="#edit-2">修改二-导入自定义html、css、js</button></li><li class="tab"><button type="button" data-href="#edit-3">修改三-主题配置文件</button></li><li class="tab"><button type="button" data-href="#edit-4">修改四-about/index.md</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="edit-1"><p>站点配置文件_config.yml中修改’skip_render:’，大约在32行。<br>说明：修改此处，是为了hexo在生成静态页面时跳过对我们自定义html渲染。这里使用的是相对位置。相对起始位置是 ‘source’ 。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line">  - &#x27;about/aboutindex.html&#x27;</span><br><span class="line">  - &#x27;about/script.js&#x27;  </span><br><span class="line">  - &#x27;about/style.css&#x27;</span><br><span class="line">  - &#x27;about/sitebox.html&#x27; </span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="edit-2"><p>将自定义的html文件放入你需要的位置，这里我放到了<code>source/about</code>目录下。<br>这里我也放入我的关于页面源代码，源代码来自于<code>CodePen - Title Text Animation</code>，略有修改，本着开源思想，我未删掉出处。<br>aboutindex.html代码如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;title&gt;CodePen - Title Text Animation&lt;/title&gt;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; href=&quot;./style.css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;!-- partial:index.partial.html --&gt;</span><br><span class="line">  &lt;section class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;h1&gt;</span><br><span class="line">      &lt;span class=&quot;title&quot;&gt;宅男&lt;/span&gt;</span><br><span class="line">      &lt;span class=&quot;title&quot;&gt;很单纯&lt;/span&gt;</span><br><span class="line">      &lt;span class=&quot;title&quot;&gt;爱研究&lt;/span&gt;</span><br><span class="line">      &lt;span class=&quot;title&quot;&gt;9年玄学经验&lt;/span&gt;</span><br><span class="line">      &lt;span class=&quot;title&quot;&gt;2年半Java练习生&lt;/span&gt;</span><br><span class="line">    &lt;/h1&gt;</span><br><span class="line">    &lt;div class=&quot;button&quot;&gt;restart&lt;/div&gt;</span><br><span class="line">  &lt;/section&gt;</span><br><span class="line">  &lt;!-- partial --&gt;</span><br><span class="line">  &lt;script src=&#x27;https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.2/jquery.min.js&#x27;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&#x27;https://cdnjs.cloudflare.com/ajax/libs/gsap/1.18.0/TweenMax.min.js&#x27;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&#x27;https://cdnjs.cloudflare.com/ajax/libs/lettering.js/0.7.0/jquery.lettering.min.js&#x27;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;./script.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>style.css代码如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">html &#123;</span><br><span class="line">  height: 100%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">  font-family: &quot;Fjalla One&quot;, sans-serif;</span><br><span class="line">  background: linear-gradient(to bottom, #eff2f6 0%, #c0d1d5 100%);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.container &#123;</span><br><span class="line">  transform: translate(-50%, -50%);</span><br><span class="line">  top: 50%;</span><br><span class="line">  left: 50%;</span><br><span class="line">  display: block;</span><br><span class="line">  position: absolute;</span><br><span class="line">  max-width: 250px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.button &#123;</span><br><span class="line">  float: left;</span><br><span class="line">  position: relative;</span><br><span class="line">  bottom: -65px;</span><br><span class="line">  left: 50%;</span><br><span class="line">  transform: translateX(-50%) rotate(-10deg);</span><br><span class="line">  color: #e55643;</span><br><span class="line">  text-transform: uppercase;</span><br><span class="line">  opacity: 0;</span><br><span class="line">  visibility: hidden;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">.button span &#123;</span><br><span class="line">  transform: skew(-10deg);</span><br><span class="line">  display: block;</span><br><span class="line">  float: left;</span><br><span class="line">  text-shadow: #b5a0ac 1px 1px, #b5a0ac 2px 2px, #b5a0ac 3px 3px, #b5a0ac 4px 4px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h1 &#123;</span><br><span class="line">  color: #fff;</span><br><span class="line">  text-transform: uppercase;</span><br><span class="line">  font-size: 2.625rem; /* 相对单位（rem）的字体大小 */</span><br><span class="line">  margin: 0;</span><br><span class="line">  line-height: 1.1176; /* 计算方式：line-height = 47px / 42px = 1.1176 */</span><br><span class="line">  letter-spacing: 0.0476em; /* 计算方式：letter-spacing = 2px / 42px = 0.0476em */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 添加媒体查询以适应移动设备，根据需要进行调整 */</span><br><span class="line">@media (max-width: 750px) &#123;</span><br><span class="line">  h1 &#123;</span><br><span class="line">    font-size: 2.4rem;</span><br><span class="line">    line-height: 1.2;</span><br><span class="line">    letter-spacing: 0.03em;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 添加更小的媒体查询以进一步适应小屏幕设备 */</span><br><span class="line">@media (max-width: 480px) &#123;</span><br><span class="line">  h1 &#123;</span><br><span class="line">    font-size: 1.6rem;</span><br><span class="line">    line-height: 1.2;</span><br><span class="line">    letter-spacing: 0.16em;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.title &#123;</span><br><span class="line">  transform: translateX(-50%) rotate(-10deg);</span><br><span class="line">  display: block;</span><br><span class="line">  float: left;</span><br><span class="line">  left: 40%;</span><br><span class="line">  position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.title span &#123;</span><br><span class="line">  transform: skew(-10deg);</span><br><span class="line">  display: block;</span><br><span class="line">  float: left;</span><br><span class="line">  text-shadow: #b5a0ac 1px 1px, #b5a0ac 2px 2px, #b5a0ac 3px 3px, #b5a0ac 4px 4px, #b5a0ac 5px 5px, #b5a0ac 6px 6px;</span><br><span class="line">  min-width: 10px;</span><br><span class="line">  min-height: 10px;</span><br><span class="line">  position: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.title:nth-child(1) &#123;</span><br><span class="line">  color: #e55643;</span><br><span class="line">&#125;</span><br><span class="line">.title:nth-child(2) &#123;</span><br><span class="line">  color: #1b6d3e;</span><br><span class="line">&#125;</span><br><span class="line">.title:nth-child(3) &#123;</span><br><span class="line">  color: #a59018;</span><br><span class="line">&#125;</span><br><span class="line">.title:nth-child(4) &#123;</span><br><span class="line">  color: #3c9ed2;</span><br><span class="line">&#125;</span><br><span class="line">.title:nth-child(5) &#123;</span><br><span class="line">  color: #26a0a8;</span><br><span class="line">  white-space: nowrap; /* 添加此行，强制在一行中显示文本 */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>script.js代码如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$(document).ready(function() &#123;</span><br><span class="line">  $(&quot;.title&quot;).lettering();</span><br><span class="line">  $(&quot;.button&quot;).lettering();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(document).ready(function() &#123;</span><br><span class="line">  animation();</span><br><span class="line">&#125;, 1000);</span><br><span class="line"></span><br><span class="line">$(&#x27;.button&#x27;).click(function() &#123;</span><br><span class="line">  animation();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">function animation() &#123;</span><br><span class="line">  var title1 = new TimelineMax();</span><br><span class="line">  title1.to(&quot;.button&quot;, 0, &#123;visibility: &#x27;hidden&#x27;, opacity: 0&#125;)</span><br><span class="line">  title1.staggerFromTo(&quot;.title span&quot;, 0.5, </span><br><span class="line">  &#123;ease: Back.easeOut.config(1.7), opacity: 0, bottom: -80&#125;,</span><br><span class="line">  &#123;ease: Back.easeOut.config(1.7), opacity: 1, bottom: 0&#125;, 0.05);</span><br><span class="line">  title1.to(&quot;.button&quot;, 0.2, &#123;visibility: &#x27;visible&#x27; ,opacity: 1&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="edit-3"><p><mark class="hl-label red">注意，这里按需配置。</mark><br>如果你的js、css文件的hrad部分需要引入其他css、js的url，就应该在主题配置文件中进行相关修改；<br>比如我这里的html文件中第7行：<code>&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css&quot;&gt;</code><br>那么我就应该在主题配置文件中的<code>inject</code>中添加（需要你的主题支持插入代码）：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    - &lt;link href=&quot;https://fonts.googleapis.com/css?family=Fjalla+One&quot; rel=&quot;stylesheet&quot;&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="edit-4"><p>直接上代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% raw %&#125; </span><br><span class="line">    //和末尾的endraw对应，为了不让hexo渲染处理。</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .shadowed-iframe &#123;</span><br><span class="line">    box-shadow: 7px 9px 11px 1px rgba(0, 0, 0, 0.3);</span><br><span class="line">    border-radius: 23px;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;iframe class=&quot;shadowed-iframe&quot; src=&quot;aboutindex.html&quot; frameborder=&quot;0&quot; width=&quot;100%&quot; height=&quot;500px&quot;&gt;&lt;/iframe&gt;//插入html的代码</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    //为了能够实现嵌入后动画正常运行</span><br><span class="line">    window.addEventListener(&#x27;message&#x27;, function(event) &#123;</span><br><span class="line">        if (event.data === &#x27;animationStarted&#x27;) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, false);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>怎么八字合婚？</title>
      <link href="/posts/29400/"/>
      <url>/posts/29400/</url>
      
        <content type="html"><![CDATA[<h2 id="一、八字合婚的目的"><a href="#一、八字合婚的目的" class="headerlink" title="一、八字合婚的目的"></a>一、八字合婚的目的</h2><p>就只有一个终级目标，希望让一个家庭两口子走的更远，生活中少一些磕磕绊绊。</p><h2 id="二、广传的合八字方法"><a href="#二、广传的合八字方法" class="headerlink" title="二、广传的合八字方法"></a>二、广传的合八字方法</h2><p>人们谈婚论嫁常常会问起双方属相，套用一个比较常见的口诀：</p><blockquote><p>黑鼠黄牛正相合，男女相配无差错。</p><p>儿女百年多长久，富贵荣华福禄多。</p><p>青虎黑猪上等婚，男女相合好缘姻。</p><p>财禄丰盈百事顺，人口兴旺有精神。</p><p>黄龙白鸡更相投，过门发达好来由。</p><p>儿女成才子孙壮，福寿长绵永不休。</p></blockquote><p>以我多年的易学经验和感悟评价，用上面这个口诀来合八字，太草率了。属相仅仅代表年支，如果只是判定年支是否相合，那怎么又能叫做合八字呢？</p><h2 id="三、八字不合会怎么样"><a href="#三、八字不合会怎么样" class="headerlink" title="三、八字不合会怎么样"></a>三、八字不合会怎么样</h2><p>有了上面这个问题，屏幕前的你可能就有疑问了：那究竟八字怎么合婚？有了这个疑问非常好，但你先别急，先研究一下，八字不合会怎么样。<br>八字代表了一个人的精神追求，求财方式，为人处世原则，能力层次……。八字不合，就是代表的这些方面不合。这是直接的两个人不匹配，间接的，也有父辈同对象之间的关系，也会影响婚姻稳定。</p><h2 id="四、怎么八字合婚"><a href="#四、怎么八字合婚" class="headerlink" title="四、怎么八字合婚"></a>四、怎么八字合婚</h2><p>知道了八字不合会怎么样，就知道判断八字合不合应该看拿着关键信息了。</p><p>首先看两个人的用神是否一致？比如同为印星，同为食伤。这直接决定了两个人的社会生存原则理念是否一致，三观是否匹配。这个才是白头偕老的基础。如果三观不合，精神追求不一致。那就夫妻本是同林鸟，大难临头各自飞。用神一致，天干地支的五行属性不一致？这个问题不大，干支五行不同，代表方式不一样，也代表工作行业岗位不一样，这不会影响两个人的目标追求。</p><p>其次，看两个人婚姻宫是否有刑冲破害。（婚姻宫就是日支）婚姻宫无刑冲破害就是正常，婚姻宫相合，那是最好。除了日支代表的婚姻宫，也要看日元，日元是八字的核心，也是人的身体，思想，性格的核心特性，最好是相合，其次是没有刑冲破害。寻找日元的官星（女生）和财星（男生），最好是男生日元五行是女生官星五行，女生同理。这是正常的，普遍性的特性，但目前社会，出现更多的不确定性，反着来的也很正常。所以官星财星和对方日元的关系，也不必深究。</p><p>上面两项都讲的是两个人的事情，实际婚姻更多时候也会受制于父辈。这就需要关心，父辈之间是否相合。<br>年支代表祖辈（包括自家祖先），月支代表父辈，家庭是否和睦，祖辈之间的影响作用很大。除了在世的父母亲，这是看得到感受得到的影响，祖先对自家后代的婚姻干涉极大，且，本人意识不到。祖先不在乎人伦，会帮忙圈来一个对象，又会打压目前的对象。如果祖先之间相合，那么夫妻双方并不会被棒打鸳鸯，当两个人关系出现破裂的时候，因为祖先插手圈堂，两个人的精神关系仍然存在，如果其中男女一方决定分手，或者已经重新找对象，这种祖先插手的影响依然在，不以人的意志而转移。这也是自古这么看重年支的本质原因。</p><p>另外八字合婚中，日元为中心的财星，官星，婚姻宫的各种联系是这个人婚姻特性，不以不同的对象而转移。合婚的时候，也要看对方这个人婚姻表现，比如男生比劫争合财星，财星多现，用神财星，财星被破，用神印星，财星破印。女生，比劫争合官星，官星多现……</p><p>婚姻没有十全十美的，理论上来说可以完美，实际上，那就取舍吧！祝在读的各位婚姻美满家庭幸福！</p>]]></content>
      
      
      <categories>
          
          <category> 易学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 合婚 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初学Java，学废了吗？</title>
      <link href="/posts/53573/"/>
      <url>/posts/53573/</url>
      
        <content type="html"><![CDATA[<p><strong>初学Java基础，一看就会，一写就废，怎么搞?</strong></p><p>初学编程时，面对练习题或实际需求可能会感到有些困惑，这是很正常的。以下是一些建议，希望能帮助你更好地学习Java基础并提高解决问题的能力：</p><ol><li><p><strong>练习更多</strong>：熟能生巧，编程也需要不断的练习。多做一些练习题，尝试解决各种问题，通过实践掌握语言的特性和使用方式。你可以找一些在线编程练习平台或者教程网站，选择适合你水平的练习题进行练习。</p></li><li><p><strong>逐步学习</strong>：确保你已经掌握了Java的基础语法和概念，如果感觉有遗漏或不够扎实，可以回顾相关的教程和资料。建立起坚实的基础，再解决更复杂的问题会更容易。</p></li><li><p><strong>阅读和理解代码</strong>：不仅要能看懂代码，更重要的是要理解代码的含义和执行流程。尝试在脑海中模拟代码的执行过程，可以借助调试工具帮助理解代码的运行过程。</p></li><li><p><strong>参考优秀代码</strong>：找一些优秀的Java项目或开源代码进行阅读，看看其他程序员是如何设计和实现代码的。这可以帮助你学习更好的编码风格和设计模式。</p></li><li><p><strong>寻求帮助</strong>：如果遇到困难或不理解的问题，不要犹豫，尽早向他人寻求帮助。可以问同学、老师、或者在编程社区论坛上提问。互相交流和讨论是学习的重要途径。</p></li><li><p><strong>梳理思路</strong>：在解决问题时，先梳理一下思路，确定解决问题的步骤和方法。尽量将问题拆解成小部分，逐一解决，最后组合起来。这样会使问题更易于解决。</p></li><li><p><strong>学习调试技巧</strong>：调试是解决问题的有效手段。学会使用调试器，逐步执行代码，观察变量值和程序执行过程，可以帮助你发现问题所在。</p></li><li><p><strong>持续学习</strong>：编程是一门不断学习的技能，随着不断学习和实践，你的编程能力会逐渐提高。保持学习的态度和动力，不断挑战新的问题，才能在编程的路上越走越远。</p></li></ol><p>最重要的是，不要灰心，编程是一个需要时间和耐心的过程。持续地学习和练习，相信自己，你会逐渐变得更加熟练并能够独立解决问题的！加油！</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA常用快捷键</title>
      <link href="/posts/63724/"/>
      <url>/posts/63724/</url>
      
        <content type="html"><![CDATA[<h1 id="IDEA常用快捷键"><a href="#IDEA常用快捷键" class="headerlink" title="IDEA常用快捷键"></a>IDEA常用快捷键</h1><h2 id="一、开发常用快捷键"><a href="#一、开发常用快捷键" class="headerlink" title="一、开发常用快捷键"></a>一、开发常用快捷键</h2><table><thead><tr><th>快捷键组合</th><th>实现效果</th></tr></thead><tbody><tr><td>psvm + Tab键 &#x2F; main + Tab键</td><td>public static void main(String[] args)</td></tr><tr><td>sout + Tab键</td><td>System.out.println()</td></tr><tr><td>Ctrl + X</td><td>删除当前行</td></tr><tr><td>Ctrl +D</td><td>复制当前行</td></tr><tr><td>Alt+Insert(或右键Generate)</td><td>生成代码(如get,set方法,构造函数等)</td></tr><tr><td>Ctrl+Alt+T</td><td>生成try catch （或者 Alt+enter选择）</td></tr><tr><td>CTRL+ALT+T</td><td>把选中的代码放在 TRY{} IF{} ELSE{} 里</td></tr><tr><td>Ctr+shift+U</td><td>实现大小写之间的转化</td></tr><tr><td>ALT+回车</td><td>导入包,自动修正</td></tr><tr><td>CTRL+ALT+L</td><td>格式化代码</td></tr><tr><td>CTRL+ALT+I</td><td>自动缩进</td></tr><tr><td>CTRL+E</td><td>最近更改的代码</td></tr><tr><td>fori</td><td>生成for (int i &#x3D; 0; i &lt; ; i++) {}</td></tr><tr><td>Alt + &lt;–左右–&gt;键</td><td>实现窗口左右更换（多窗口）</td></tr><tr><td>Ctrl + 鼠标点击</td><td>快速找到成员变量的出处</td></tr><tr><td>Shift+F6</td><td>重构&#x2F;重命名 (包、类、方法、变量、甚至注释等)</td></tr><tr><td>CTRL+Q</td><td>查看当前方法的声明</td></tr><tr><td>Ctrl+Alt+V</td><td>自动创建变量（new 对象();之后选择按快捷键）</td></tr><tr><td>Ctrl+O</td><td>重写方法</td></tr><tr><td>Ctrl+I</td><td>实现方法</td></tr><tr><td>ALT+&#x2F;</td><td>代码提示</td></tr><tr><td>Ctrl+Shift+R</td><td>在当前项目中替换指定内容</td></tr><tr><td>Ctrl+E</td><td>最近编辑的文件列表</td></tr><tr><td>Ctrl+P</td><td>显示方法参数信息</td></tr><tr><td>Ctrl+Shift+Insert</td><td>查看历史复制记录，idea可以保留历史复制的 100 条记录</td></tr></tbody></table><hr><h2 id="二、查找"><a href="#二、查找" class="headerlink" title="二、查找"></a>二、查找</h2><table><thead><tr><th>快捷键</th><th>介绍</th></tr></thead><tbody><tr><td>Ctrl + F</td><td>在当前文件进行文本查找</td></tr><tr><td>Ctrl + R</td><td>在当前文件进行文本替换</td></tr><tr><td>Shift + Ctrl + F</td><td>在项目进行文本查找</td></tr><tr><td>Shift + Ctrl + R</td><td>在项目进行文本替换</td></tr><tr><td>Shift + Shift</td><td>快速搜索</td></tr><tr><td>Ctrl + N</td><td>查找class</td></tr><tr><td>Ctrl + Shift + N</td><td>查找文件</td></tr><tr><td>Ctrl + Shift + Alt + N</td><td>查找symbol（查找某个方法名）</td></tr></tbody></table><hr><h2 id="三、编码相关"><a href="#三、编码相关" class="headerlink" title="三、编码相关"></a>三、编码相关</h2><table><thead><tr><th>快捷键</th><th>介绍</th></tr></thead><tbody><tr><td>Ctrl + W</td><td>快速选中</td></tr><tr><td>(Shift + Ctrl) + Alt + J</td><td>快速选中同文本</td></tr><tr><td>Ctrl + C&#x2F;Ctrl + X&#x2F;Ctrl + D</td><td>快速复制或剪切</td></tr><tr><td>多行选中 Tab &#x2F; Shift + Tab</td><td>tab</td></tr><tr><td>Ctrl + Y</td><td>删除整行</td></tr><tr><td>滚轮点击变量&#x2F;方法&#x2F;类</td><td>快速进入变量&#x2F;方法&#x2F;类的定义处</td></tr><tr><td>Shift + 点击Tab</td><td>快速关闭tab</td></tr><tr><td>Ctrl + Z 、Ctrl + Shift + Z</td><td>后悔药，撤销&#x2F;取消撤销</td></tr><tr><td>Ctrl + Shift + enter</td><td>自动收尾，代码自动补全</td></tr><tr><td>Alt + enter</td><td>IntelliJ IDEA 根据光标所在问题，提供快速修复选择，光标放在的位置不同提示的结果也不同</td></tr><tr><td>Alt + ↑&#x2F;↓</td><td>方法快速跳转</td></tr><tr><td>F2</td><td>跳转到下一个高亮错误 或 警告位置</td></tr><tr><td>Alt + Insert</td><td>代码自动生成，如生成对象的 set &#x2F; get 方法，构造函数，toString() 等</td></tr><tr><td>Ctrl + Shift + L</td><td>格式化代码</td></tr><tr><td>Shift + F6</td><td>快速修改方法名、变量名、文件名、类名等</td></tr><tr><td>Ctrl + F6</td><td>快速修改方法签名</td></tr></tbody></table><hr><h2 id="四、代码阅读相关"><a href="#四、代码阅读相关" class="headerlink" title="四、代码阅读相关"></a>四、代码阅读相关</h2><table><thead><tr><th>快捷键</th><th>介绍</th></tr></thead><tbody><tr><td>Ctrl + P</td><td>方法参数提示显示</td></tr><tr><td>Ctrl + Shift + i</td><td>就可以在当前类里再弹出一个窗口出来</td></tr><tr><td>Alt + F7</td><td>可以列出变量在哪些地方被使用了</td></tr><tr><td>光标在子类接口名</td><td>Ctrl + u跳到父类接口</td></tr><tr><td>Alt + F1 + 1 , esc</td><td></td></tr><tr><td>(Shift) + Ctrl + +&#x2F;-</td><td>代码块折叠</td></tr><tr><td>Ctrl + Shift + ←&#x2F;→</td><td>移动窗口分割线</td></tr><tr><td>Ctrl + (Alt) + B</td><td>跳转方法定义&#x2F;实现</td></tr><tr><td>Ctrl + H</td><td>类的层级关系</td></tr><tr><td>Ctrl + F12</td><td>Show Members 类成员快速显示</td></tr></tbody></table><hr>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java中的抽象方法</title>
      <link href="/posts/38892/"/>
      <url>/posts/38892/</url>
      
        <content type="html"><![CDATA[<h1 id="Java中的抽象方法"><a href="#Java中的抽象方法" class="headerlink" title="Java中的抽象方法"></a>Java中的抽象方法</h1><h2 id="一、什么是Java的抽象方法？"><a href="#一、什么是Java的抽象方法？" class="headerlink" title="一、什么是Java的抽象方法？"></a>一、什么是Java的抽象方法？</h2><p>在Java中，抽象方法是一种没有具体的方法，它只有方法签名（包括方法名称、参数列表和返回类型）而没有方法体。抽象方法用关键字<code>abstract</code>声明，并且包含在抽象类或接口中。</p><p>抽象方法的作用是为了让子类或实现类必须提供该方法的具体实现。当一个类包含一个或多个抽象方法时，该类也必须被声明为抽象类。抽象类本身无法被实例化，只能被继承。</p><p>定义抽象方法的语句如下：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">abstract</span> returnType <span class="title function_">methodName</span><span class="params">(parameters)</span>;</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li><p><code>abstract</code> 关键字用于标识抽象方法。</p></li><li><p><code>returnType</code> 是方法的返回类型，指定了该方法执行后返回的数据类型。</p></li><li><p><code>methodName</code> 是方法的名称，用于在代码中调用该方法。</p></li><li><p><code>parameters</code> 是方法的参数列表，包含了方法调用时传递给方法的数据。</p><p><strong>举个例子</strong>：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 抽象类</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Shape</span> &#123;</span><br><span class="line">    <span class="comment">// 抽象方法</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="type">double</span> <span class="title function_">calculateArea</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 继承自抽象类的具体子类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span> <span class="keyword">extends</span> <span class="title class_">Shape</span> &#123;</span><br><span class="line">    <span class="type">double</span> radius;</span><br><span class="line"></span><br><span class="line">    Circle(<span class="type">double</span> radius) &#123;</span><br><span class="line">        <span class="built_in">this</span>.radius = radius;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 必须实现抽象方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="type">double</span> <span class="title function_">calculateArea</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Math.PI * radius * radius;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 继承自抽象类的另一个具体子类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Rectangle</span> <span class="keyword">extends</span> <span class="title class_">Shape</span> &#123;</span><br><span class="line">    <span class="type">double</span> length;</span><br><span class="line">    <span class="type">double</span> width;</span><br><span class="line"></span><br><span class="line">    Rectangle(<span class="type">double</span> length, <span class="type">double</span> width) &#123;</span><br><span class="line">        <span class="built_in">this</span>.length = length;</span><br><span class="line">        <span class="built_in">this</span>.width = width;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 必须实现抽象方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="type">double</span> <span class="title function_">calculateArea</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> length * width;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Shape</span> <span class="variable">circle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Circle</span>(<span class="number">5</span>);</span><br><span class="line">        <span class="type">Shape</span> <span class="variable">rectangle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Rectangle</span>(<span class="number">4</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;圆的面积: &quot;</span> + circle.calculateArea());</span><br><span class="line">        System.out.println(<span class="string">&quot;矩形的面积: &quot;</span> + rectangle.calculateArea());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在这个例子中，Shape 类是一个抽象类，它包含一个抽象方法 calculateArea()。Circle 和 Rectangle 是继承自 Shape 的具体子类，它们必须实现 calculateArea() 方法。由于抽象方法没有具体实现，所以它们只有在子类中实现后才能正确运行。</p></li></ul><h2 id="二、抽象方法的应用场景"><a href="#二、抽象方法的应用场景" class="headerlink" title="二、抽象方法的应用场景"></a>二、抽象方法的应用场景</h2><p>  抽象方法在面向对象编程中具有重要的应用场景，主要用于以下几个方面：</p><ol><li><strong>定义共同的行为接口</strong>：抽象方法允许你在抽象类或接口中定义一组方法，这些方法描述了具有共同行为的一类对象应该具备的能力。子类或实现类必须提供这些抽象方法的具体实现，以满足接口的规范。</li><li><strong>实现多态性</strong>：抽象方法是实现多态的关键。通过在抽象类或接口中声明抽象方法，你可以在子类中根据具体的需求实现不同的方法体。这样，通过父类或接口的引用，可以调用不同子类的相同方法，实现多态行为。</li><li><strong>强制子类实现</strong>：通过使用抽象方法，你可以强制子类提供对抽象方法的实现。这样可以确保子类不会遗漏关键的方法，从而在编译阶段就能检测到错误。</li><li><strong>模板方法设计模式</strong>：抽象方法在模板方法设计模式中扮演重要角色。在这种模式中，抽象类定义算法的框架，其中的某些步骤由抽象方法表示。具体子类通过实现这些抽象方法来定制算法的细节。</li><li><strong>接口</strong>：接口是一种特殊的抽象类，其中所有的方法都是抽象方法。接口用于定义一个契约，规定了实现类应该提供的一组方法。它们被广泛用于Java中的多态性和类之间的解耦。</li></ol><p>  抽象方法的应用使得代码更加灵活，可扩展性更强，符合面向对象编程的原则。它们提供了一种规范的方式来描述类之间的关系，同时也允许具体的子类根据自己的需求进行实现。在Java中，抽象类和接口的结合使用为我们提供了强大的工具，帮助我们构建可维护和可扩展的程序。</p><h2 id="三、可以使用重载方法代替抽象方法吗？"><a href="#三、可以使用重载方法代替抽象方法吗？" class="headerlink" title="三、可以使用重载方法代替抽象方法吗？"></a>三、可以使用重载方法代替抽象方法吗？</h2><h2 id="（同样涉及多态，怎么就不能代替呢？）"><a href="#（同样涉及多态，怎么就不能代替呢？）" class="headerlink" title="（同样涉及多态，怎么就不能代替呢？）"></a>（同样涉及多态，怎么就不能代替呢？）</h2><p>虽然重载方法和抽象方法都涉及方法的多态性，但它们是完全不同的概念，不能直接替代。</p><p><strong>重载方法</strong>是指在同一个类中，通过改变方法的参数列表来定义多个同名方法，但这些方法的返回类型可以相同也可以不同。重载方法通常用于提供不同参数组合的方法，以便于调用者根据具体情况选择合适的方法进行调用。重载方法之间的关系是在同一个类中，方法名称相同但参数列表不同。</p><p><strong>抽象方法</strong>是指没有具体实现的方法，它只有方法的签名而没有方法体，必须在抽象类或接口中声明。子类或实现类必须提供对抽象方法的具体实现。抽象方法通常用于定义一组规范，要求子类必须提供特定的行为。抽象方法之间的关系是在父类（或接口）中声明抽象方法，子类必须实现这些抽象方法。</p><p>因此，重载方法主要用于提供方法的重复性定义，而抽象方法主要用于定义一组共同行为的接口，并要求子类必须实现这些行为。它们的目的和应用场景是不同的。</p><p>在某些情况下，你可能会使用抽象方法和重载方法来实现不同的逻辑。例如，抽象类中定义了一个抽象方法，要求子类实现某种通用的行为，同时在抽象类中还可以定义一系列重载方法，用于提供一些默认实现或处理特殊情况。这样可以在不同层次上实现灵活的逻辑，让代码更具有可读性和可维护性。</p><p>总而言之，抽象方法和重载方法是面向对象编程中两个不同的概念，它们各自有自己的用途，并不能直接替代对方。</p>]]></content>
      
      
      <categories>
          
          <category> java学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>怎么科学的化解犯太岁</title>
      <link href="/posts/14793/"/>
      <url>/posts/14793/</url>
      
        <content type="html"><![CDATA[<blockquote><p>太岁当头坐，非灾便是祸？肯定回答：当然不是</p></blockquote><h2 id="一、太岁之说从何而来？"><a href="#一、太岁之说从何而来？" class="headerlink" title="一、太岁之说从何而来？"></a>一、太岁之说从何而来？</h2><p>犯太岁的说法大致可以分为两类：1. 神将菩萨；2. 命理星象。分述如下：</p><h3 id="一）神将菩萨"><a href="#一）神将菩萨" class="headerlink" title="一）神将菩萨"></a>一）神将菩萨</h3><p>说法一：六十甲子各有神将轮值，而当年轮值之岁神称为值年太岁。各神将名字如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">甲子金辩 乙丑陈林 丙寅沈兴 丁卯耿章 戊辰赵达 己巳郭灿</span><br><span class="line">庚午王清 辛未李熹 壬申刘玉 癸酉康忠 甲戌詹广 乙亥伍保</span><br><span class="line">丙子郭嘉 丁丑汪文 戊寅曾光 己卯方仲 庚辰董德 辛己郑祖</span><br><span class="line">壬午陆明 癸未魏仁 甲申方杰 乙酉蒋崇 丙戌白敏 丁亥封济</span><br><span class="line">戊子郑镗 己丑潘佑 庚寅邬柏 辛卯范宁 壬辰彭泰 癸巳时斝</span><br><span class="line">甲午章嗣 乙未杨贤 丙申管仲 丁酉唐杰 戊戌姜武 己亥谢焘</span><br><span class="line">庚子卢超 辛丑杨信 壬寅贺谔 癸卯皮时 甲辰李成 乙巳吴遂</span><br><span class="line">丙午文祈 丁未缪丙 戊申俞昌 己酉程宝 庚戌倪秘 辛亥叶坚</span><br><span class="line">壬子邶德 癸丑朱雍 甲寅张朝 乙卯万清 丙辰辛亚 丁巳易彦</span><br><span class="line">戊午黎卿 己未傅傥 庚申毛粹 辛酉石政 壬戌洪克 癸亥卢经</span><br><span class="line">-----------------------君解厄延生法忏－道藏辑要</span><br></pre></td></tr></table></figure><p>太岁是司管人间一年之吉凶祸福的岁君。古书云：“太岁如君，为众神之首，众煞之主，有如君临天下，不可冒犯。犯太岁既是生肖所<code>刑</code>、<code>冲</code>、<code>破</code>、<code>害</code>、<code>伏吟</code>当年生肖的统称，如何查犯太岁生肖不在此赘述。（这里更偏重于生肖冲撞太岁神将，而致灾祸。）</p><p>说法二：由于生肖与当年年支可能发生<code>刑</code>、<code>冲</code>、<code>破</code>、<code>害</code>、<code>伏吟</code>，形成灾祸，遂向当年太岁神将祈求护佑，以保平安。（这里更偏重于天地之气作用于自身，而致灾祸。）<br>神将为本土道家说法（这里我用的不是道教，道教和道家不同，另篇讨论），随时代变迁，佛教亦有六十甲子菩萨护法说法，大同小异。</p><h3 id="二）命理星象"><a href="#二）命理星象" class="headerlink" title="二）命理星象"></a>二）命理星象</h3><p>命理星象的解释更注重于事物本质，六十甲子循环往复，天地之气符合当年干支之气（随月日时干支，即寒来暑往，变动，天地之气虽有变动，但总基础在于当年干支），于个人来讲，八字年支<code>刑</code>、<code>冲</code>、<code>破</code>、<code>害</code>、<code>伏吟</code>当年年支，即是犯太岁。虽然犯太岁，但不一定都是有应凶事，八字要看喜用神，冲者发，合者凶，值者旺相都有可能的。</p><h2 id="二、如何科学的化解犯太岁？"><a href="#二、如何科学的化解犯太岁？" class="headerlink" title="二、如何科学的化解犯太岁？"></a>二、如何科学的化解犯太岁？</h2><p>目前流传化太岁方法大致为以下两种：</p><ol><li><p>符咒法事（安太岁符）</p></li><li><p>佩戴各化解物品</p></li></ol><p>  通过对太岁神将或菩萨祈祷祝由（这里所说祝由，所用祝由本意：祝告病由、灾由）以保平安，在宫观寺庙或家中或随身佩戴太岁符。天南地北各法派传承略有差异，符式不一，但内在本质基本一致，都是所在法门内神将护法主事，拿人钱财，于人消灾解难。如果神将护法有消灾解难的能力，那他们也就不需要人的供奉香火了，从未见过能通过神将护法逆天改命的。这种方法，更需要注意的是法事化解中，神将护法等阴鬼仙家参与其中，导致的圈堂的结果（想知道什么是圈堂？<a href="https://xmlyjy.cn/posts/d496.html">点我!</a>）。简单讲就是，阴鬼仙家暗中圈信客的钱财、感情或香火（本质都属于修行资源），表现出来就是，时不时的就想去找法师看看事，花点钱，送点礼，不然心里不踏实。也可能会出现梦里和这个法师谈恋爱，关系亲密，这也就是阴桃花。今生被圈堂，无实修（修行），恐怕出不来了。</p><p>对比法事化解，佩戴不同不行属性的物品，似乎是能避免圈财的因果，但法由心出，如果送你物品的人自带仙缘，那难免存在圈堂的可能。天地之气运转，若犯太岁，佩戴化解的物品，似乎是可以物品的五行平衡自身五行能量，但物品的能量又怎么能抵抗天地整个大五行的能量。更重要的是灾祸的形成是天地人心的共同作用，里面参与的不仅仅只是五行之气，还有众生。</p><p>如果化解有用，这就算是逆天改命了！显然，这不可能。</p>]]></content>
      
      
      <categories>
          
          <category> 玄学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 犯太岁 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
